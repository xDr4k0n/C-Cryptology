
//                             Integer-Functions
//---------------------------------------------------------------------------------
int Quick_search_int(int vet[],int dim,int cercato);
//---------------------------------------------------------------------------------
void Search_int_output(int array[],int dim,int search);
//---------------------------------------------------------------------------------
int Sum_array(int array[],int dime);
//---------------------------------------------------------------------------------
void Media_2_vect(int vettore1[],int vettore2[],int dim,int risultati[]);
//---------------------------------------------------------------------------------
void Media_2_vect_modulo(int vettore1[],int vettore2[],int dim,int risultati[]);
//---------------------------------------------------------------------------------
int Media_vect(int array[],int di);
//---------------------------------------------------------------------------------
int Media_vect_modulo(int array[],int d);
//---------------------------------------------------------------------------------
int Search_pari(int array[],int dime);
//---------------------------------------------------------------------------------
int Search_dispari(int array[],int dime);
//---------------------------------------------------------------------------------
int Search_min(int array[],int dime);
//---------------------------------------------------------------------------------
int Search_max(int array[],int dime);
//---------------------------------------------------------------------------------
int Search(int array[],int dime,int cercato);
//---------------------------------------------------------------------------------
void Transformers_Binary(int paziente);
//---------------------------------------------------------------------------------
void Auto_Load(int array[],int dim);
//---------------------------------------------------------------------------------
void Manual_Load(int array[],int dime);
//---------------------------------------------------------------------------------
void Bubble_Sort(int tavola[],int dim);
//---------------------------------------------------------------------------------
void Insertion_Sort(int tavola[],int dim);
//---------------------------------------------------------------------------------
void Selection_Sort(int tavola[],int dim);
//---------------------------------------------------------------------------------
int Multip(int num1,int num2);
//---------------------------------------------------------------------------------
void Show_array(int vet[],int dim);
//---------------------------------------------------------------------------------
int Fact(int paziente);
//---------------------------------------------------------------------------------
void Load_0_Array(int buff[],int dim);
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//                              Float-Functions
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//                              Char-Functions
//---------------------------------------------------------------------------------
void char_plus(char str[],int dim,char stringa_transformata[]);
//---------------------------------------------------------------------------------
void Search_voc_cons(char stringa[]);
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//---------------------------------------------------------------------------------
//                             String-Functions
//---------------------------------------------------------------------------------
int String_copy(char segment1[],char segment2[]);
//---------------------------------------------------------------------------------
int Cmp_stringa(char segment1[],char segment2[]);
//---------------------------------------------------------------------------------
int String_dimension(char compartimeni[]);
//---------------------------------------------------------------------------------
void Search_Minuscole_maiuscole(char parola_input[]);
//---------------------------------------------------------------------------------
void Load_Char_0_9(char buff[]);
//---------------------------------------------------------------------------------
void Load_Char_a_z(char buff[]);
//---------------------------------------------------------------------------------
void Load_Char_A_Z(char buff[]);
//---------------------------------------------------------------------------------
void Identify_string_output(char segment[]);
//---------------------------------------------------------------------------------

//                               Cryptology
int Identify_string(char segment[],char found_copys[],int num_copys[]);
//Return number of copy found
//char - Copyes > 1
//num_copys - number per char
